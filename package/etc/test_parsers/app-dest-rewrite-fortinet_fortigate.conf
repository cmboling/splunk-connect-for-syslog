#filename: /opt/sc4s/local/app_parsers/rewriters/app-dest-rewrite-fortinet_fortigate

block parser app-dest-rewrite-fortinet_fortigate-d_fmt_hec_default() {    
    channel {
        rewrite {
            subst ( 'date=[^\s]+', "", value("MESSAGE") );
            subst ( 'time=[^\s]+', "", value("MESSAGE") );            
            subst ( 'tz=[^\s]+', "", value("MESSAGE") );
            subst ( 'eventtime=[^\s]+', "", value("MESSAGE") );
            subst ( 'vd="?[^ "]+"?', "", value("MESSAGE") );
            subst ( 'srcintfrole="?[a-z]+"?', "", value("MESSAGE") );
            subst ( 'dstintfrole="?[a-z]+"?', "", value("MESSAGE") );
            subst ( 'policytype="?policy"?', "", value("MESSAGE") );
            subst ( 'devname="?[^ "]+"?', "", value("MESSAGE") );     
            subst ( '^ *"', "", value("MESSAGE") );     
            subst ( ' *$"', "", value("MESSAGE") );     
            set("t_msg_trim", value(".splunk.sc4s_template"));
            # The following also converts to json format is faster but uses more bytes 
            # unset(value('.values.tz'));
            # unset(value('.values.eventtime'));
            # unset(value('.values.vd'));
            # unset(value('.values.srcintfrole'));
            # unset(value('.values.dstintfrole'));
            # unset(value('.values.policytype'));
            # unset(value('.values.devname'));
            # unset(value('.values.date'));
            # unset(value('.values.time'));            
            # set("t_json_values", value(".splunk.sc4s_template"));
        };             
   };
};

application app-dest-rewrite-fortinet_fortigate-d_fmt_hec_default[sc4s-lp-dest-format-d_hec_fmt] {
    filter {
        "${fields.sc4s_vendor}" eq 'fortinet'
        and "${fields.sc4s_product}" eq "fortios"
    };    
    parser { app-dest-rewrite-fortinet_fortigate-d_fmt_hec_default(); };   
};