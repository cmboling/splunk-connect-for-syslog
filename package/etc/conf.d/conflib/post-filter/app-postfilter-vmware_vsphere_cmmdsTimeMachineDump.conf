# template t_vmware_vsphere_cmmdsTimeMachineDump {
#         template("${.metadata.seq}|${.metadata.id}|${.gb.message}");
# };



block parser app-postfilter-vmware_vsphere_cmmdsTimeMachineDump() {
    channel {

        rewrite {
            subst('.$', '', value('MESSAGE'));
        };

        parser{
            grouping-by(
                scope(program)
                key('$SOURCEIP')
                trigger(message('\\q$'))
                aggregate(
                    tags("agg")
                    value(".gb.message" "$(implode '' $(list-slice 0:-1 $(context-values ${MESSAGE})))")
                    value("PROGRAM" "${PROGRAM}@1")
                    value("HOST" "${HOST}@1")
                    value(".splunk.sc4s_template", "t_msg_only")
                    value(".splunk.sourcetype", "vmware:esxlog:cmmdstimemachinedump")
                    value(".metadata.sc4s.countOfParts", "$(context-length)")
                    tags("isStructured")
                    inherit-mode(context)
                )
                timeout(2)
            );
        };

        if {
            filter {
                filter(f_is_agg)
            };
            rewrite {
                r_set_splunk_dest_update(
                    class('cmmdstimemachinedump')
                )
            };
            rewrite {
                subst('\q', '', type(string) flags(substring) value('.gb.message'));
            };

            parser {
                csv-parser(
                    columns("timestamp","guid1","value1","value2","guid2","value3","message")
                    prefix(".tmp.")
                    delimiters(',')
                    flags(greedy)
                    template('${.gb.message}')
                );
            };
            rewrite {
                set(
                    '${.tmp.message}',
                    value('MESSAGE')
                );
            };
        } elif {
             filter {
                not filter(f_is_agg)
            };

            rewrite(r_set_dest_splunk_null_queue);

        } else {
             rewrite {
                set(
                    '${.tmp.message}',
                    value('MESSAGE')
                );
            };
        };


    };
};
application app-postfilter-vmware_vsphere_cmmdsTimeMachineDump[sc4s-postfilter] {
    filter {
        program('cmmdsTimeMachineDump' type(string))
        and "`SC4S_SOURCE_VMWARE_VSPHERE_GROUPMSG`" eq "yes"

    };

    parser { app-postfilter-vmware_vsphere_cmmdsTimeMachineDump(); };
};
